{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "src/assets/Application.cpp",
			"settings":
			{
				"buffer_size": 70,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAACEAAAAAAAAAIgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					2,
					"left_delete",
					null,
					"AgAAABIAAAAAAAAAEgAAAAAAAAAQAAAAI2luY2x1ZGUgIlNETDMvIhEAAAAAAAAAEQAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiAAAAAAAAABIAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 4277,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\nCpm"
					},
					"BAAAAHYIAAAAAAAAdwgAAAAAAAAAAAAAdwgAAAAAAAB4CAAAAAAAAAAAAAB4CAAAAAAAAHkIAAAAAAAAAAAAAHkIAAAAAAAAeggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdggAAAAAAAB2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					2,
					"left_delete",
					null,
					"AgAAAHkIAAAAAAAAeQgAAAAAAAABAAAAbXgIAAAAAAAAeAgAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAeggAAAAAAAB6CAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "PMA"
					},
					"AwAAAHgIAAAAAAAAeQgAAAAAAAAAAAAAeQgAAAAAAAB6CAAAAAAAAAAAAAB6CAAAAAAAAHsIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAgAAAAAAAB4CAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "ddPa"
					},
					"BAAAAHsIAAAAAAAAfAgAAAAAAAAAAAAAfAgAAAAAAAB9CAAAAAAAAAAAAAB9CAAAAAAAAH4IAAAAAAAAAAAAAH4IAAAAAAAAfwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewgAAAAAAAB7CAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "ckage"
					},
					"BQAAAH8IAAAAAAAAgAgAAAAAAAAAAAAAgAgAAAAAAACBCAAAAAAAAAAAAACBCAAAAAAAAIIIAAAAAAAAAAAAAIIIAAAAAAAAgwgAAAAAAAAAAAAAgwgAAAAAAACECAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwgAAAAAAAB/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIQIAAAAAAAAhggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAgAAAAAAACECAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIUIAAAAAAAAhwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQgAAAAAAACFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "gh"
					},
					"AgAAAIYIAAAAAAAAhwgAAAAAAAAAAAAAhwgAAAAAAACICAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhggAAAAAAACGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAIgIAAAAAAAAiQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAgAAAAAAACICAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"paste",
					null,
					"AQAAAIkIAAAAAAAAqggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQgAAAAAAACJCAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AwAAAIUIAAAAAAAAhQgAAAAAAAADAAAAImdohQgAAAAAAACGCAAAAAAAAAAAAACGCAAAAAAAAIoIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQgAAAAAAACICAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "Name"
					},
					"BAAAAIoIAAAAAAAAiwgAAAAAAAAAAAAAiwgAAAAAAACMCAAAAAAAAAAAAACMCAAAAAAAAI0IAAAAAAAAAAAAAI0IAAAAAAAAjggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiggAAAAAAACKCAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI4IAAAAAAAAjwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjggAAAAAAACOCAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "Clay"
					},
					"BAAAAI8IAAAAAAAAkAgAAAAAAAAAAAAAkAgAAAAAAACRCAAAAAAAAAAAAACRCAAAAAAAAJIIAAAAAAAAAAAAAJIIAAAAAAAAkwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwgAAAAAAACPCAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJMIAAAAAAAAmAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwgAAAAAAACTCAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "GITHUB"
					},
					"BgAAAJgIAAAAAAAAmQgAAAAAAAAAAAAAmQgAAAAAAACaCAAAAAAAAAAAAACaCAAAAAAAAJsIAAAAAAAAAAAAAJsIAAAAAAAAnAgAAAAAAAAAAAAAnAgAAAAAAACdCAAAAAAAAAAAAACdCAAAAAAAAJ4IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAgAAAAAAACYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "-REPOSI"
					},
					"BwAAAJ4IAAAAAAAAnwgAAAAAAAAAAAAAnwgAAAAAAACgCAAAAAAAAAAAAACgCAAAAAAAAKEIAAAAAAAAAAAAAKEIAAAAAAAAoggAAAAAAAAAAAAAoggAAAAAAACjCAAAAAAAAAAAAACjCAAAAAAAAKQIAAAAAAAAAAAAAKQIAAAAAAAApQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnggAAAAAAACeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "TORY"
					},
					"BAAAAKUIAAAAAAAApggAAAAAAAAAAAAApggAAAAAAACnCAAAAAAAAAAAAACnCAAAAAAAAKgIAAAAAAAAAAAAAKgIAAAAAAAAqQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQgAAAAAAAClCAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkIAAAAAAAAqggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQgAAAAAAACpCAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAKsIAAAAAAAAqwgAAAAAAAATAAAAaHR0cHM6Ly9naXRodWIuY29tLw",
					"AQAAAAAAAAABAAAAvggAAAAAAACrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAKoIAAAAAAAAqggAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAqwgAAAAAAACrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAALgIAAAAAAAAuAgAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAuQgAAAAAAAC5CAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALgIAAAAAAAAvQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAgAAAAAAAC4CAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "gt"
					},
					"AgAAAL0IAAAAAAAAvggAAAAAAAAAAAAAvggAAAAAAAC/CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQgAAAAAAAC9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					2,
					"left_delete",
					null,
					"AgAAAL4IAAAAAAAAvggAAAAAAAABAAAAdL0IAAAAAAAAvQgAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAvwgAAAAAAAC/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "GIT_"
					},
					"BAAAAL0IAAAAAAAAvggAAAAAAAAAAAAAvggAAAAAAAC/CAAAAAAAAAAAAAC/CAAAAAAAAMAIAAAAAAAAAAAAAMAIAAAAAAAAwQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQgAAAAAAAC9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "TAG"
					},
					"AwAAAMEIAAAAAAAAwggAAAAAAAAAAAAAwggAAAAAAADDCAAAAAAAAAAAAADDCAAAAAAAAMQIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQgAAAAAAADBCAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAAJ4IAAAAAAAAnggAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAnwgAAAAAAACfCAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAJ4IAAAAAAAAnwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnggAAAAAAACeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " m"
					},
					"AgAAAMQIAAAAAAAAxQgAAAAAAAAAAAAAxQgAAAAAAADGCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAgAAAAAAADECAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "ain"
					},
					"AwAAAMYIAAAAAAAAxwgAAAAAAAAAAAAAxwgAAAAAAADICAAAAAAAAAAAAADICAAAAAAAAMkIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxggAAAAAAADGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "0.14"
					},
					"BAAAAMUIAAAAAAAAxggAAAAAAAAEAAAAbWFpbsYIAAAAAAAAxwgAAAAAAAAAAAAAxwgAAAAAAADICAAAAAAAAAAAAADICAAAAAAAAMkIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQgAAAAAAADFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"paste",
					null,
					"AQAAAIUIAAAAAAAAnggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQgAAAAAAACFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"paste",
					null,
					"AQAAAIkIAAAAAAAAlwgAAAAAAAAMAAAAZ2FiaW1lL3NwZGxv",
					"AQAAAAAAAAABAAAAiQgAAAAAAACVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					2,
					"left_delete",
					null,
					"AgAAAJ4IAAAAAAAAnggAAAAAAAABAAAAMZ0IAAAAAAAAnQgAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAnwgAAAAAAACfCAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAAJkIAAAAAAAAmQgAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAmggAAAAAAACaCAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAJkIAAAAAAAAmggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQgAAAAAAACZCAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJ4IAAAAAAAAnwgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnggAAAAAAACeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAKAIAAAAAAAAoQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAgAAAAAAACgCAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAK8IAAAAAAAAsAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwgAAAAAAACvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"left_delete",
					null,
					"AQAAAK8IAAAAAAAArwgAAAAAAAABAAAARQ",
					"AQAAAAAAAAABAAAAsAgAAAAAAACwCAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAK8IAAAAAAAAsAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwgAAAAAAACvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAANYIAAAAAAAA1wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1ggAAAAAAADWCAAAAAAAAAAAAAAAACBA"
				],
				[
					101,
					2,
					"left_delete",
					null,
					"AgAAANYIAAAAAAAA1ggAAAAAAAABAAAAI9UIAAAAAAAA1QgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA1wgAAAAAAADXCAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAANUIAAAAAAAA1ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QgAAAAAAADVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYIAAAAAAAA1wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1ggAAAAAAADWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAJcIAAAAAAAAlwgAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAmAgAAAAAAACYCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "build/CMakeCache.txt",
			"settings":
			{
				"buffer_size": 54286,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/User/CMake-Ninja.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/CMake-Ninja.sublime-build",
					""
				],
				[
					"Packages/User/CMake-Ninja.sublime-build",
					"Clean"
				],
				[
					"Packages/User/CMake-Ninja.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/CMake-Ninja.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/CMake-Ninja.sublime-build",
					""
				],
				[
					"Packages/User/CMake-Ninja.sublime-build",
					"Clean"
				],
				[
					"Packages/User/CMake-Ninja.sublime-build",
					"Run Debug"
				],
				[
					"Packages/User/CMake-Ninja.sublime-build",
					"Run Release"
				],
				[
					"Packages/User/CMake-Ninja.sublime-build",
					"Run Dist"
				]
			],
			[
				"Packages/User/CMake-Ninja.sublime-build",
				"Run Debug"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ter",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"lsp res",
				"LSP: Restart Server"
			],
			[
				"lsp",
				"Preferences: LSP Settings"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"clang",
				"Package Control: Install Package"
			],
			[
				"clang lsp",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"git",
				"git: commit"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/build",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/build/_deps",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/build/_deps/spdlog-build",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/src",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/src/assets",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/src/engine",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/vendor",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/vendor/bin",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/vendor/lib"
	],
	"file_history":
	[
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/src/assets/Application.cpp",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/premake5.lua",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/CMakeLists.txt",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/.clangd",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/Hollows Engine.sublime-project",
		"/C/Users/Zeon/AppData/Roaming/Sublime Text/Packages/User/CMake-Ninja.sublime-build",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/.gitignore",
		"/C/Users/Zeon/AppData/Roaming/Sublime Text/Packages/User/CompileDBMake.sublime-build",
		"/D/Work/Game Engine/The Hollows/HollowsGraphicsEngine/generate_project_gmake_clang.bat"
	],
	"find":
	{
		"height": 45.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\")\n",
			" \n",
			" --"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/assets/Application.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 70,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/*",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///D:/Work/Game%20Engine/The%20Hollows/HollowsGraphicsEngine/src/assets/Application.cpp",
							"show_definitions": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "CMakeLists.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4277,
						"regions":
						{
						},
						"selection":
						[
							[
								2279,
								2279
							]
						],
						"settings":
						{
							"lsp_uri": "file:///D:/Work/Game%20Engine/The%20Hollows/HollowsGraphicsEngine/CMakeLists.txt",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 716.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "build/CMakeCache.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 54286,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"lsp_uri": "file:///D:/Work/Game%20Engine/The%20Hollows/HollowsGraphicsEngine/build/CMakeCache.txt",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": true,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 45.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.Terminus":
	{
		"height": 130.0,
		"history":
		[
		]
	},
	"output.Terminus 2":
	{
		"height": 130.0,
		"history":
		[
		]
	},
	"output.diagnostics":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.exec":
	{
		"height": 130.0,
		"history":
		[
		]
	},
	"output.find_results":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.mdpopups":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"pinned_build_system": "Packages/User/CMake-Ninja.sublime-build",
	"project": "Hollows Engine.sublime-project",
	"replace":
	{
		"height": 86.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 240.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
