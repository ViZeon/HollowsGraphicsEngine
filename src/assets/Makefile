# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

INCLUDES += -I../engine
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../../bin/Debug-windows-x86_64/Assets
TARGET = $(TARGETDIR)/Assets.exe
OBJDIR = ../../bin-int/Debug-windows-x86_64/Assets
DEFINES += /D"_UNICODE" /D"UNICODE" /D"HZ_PLATFORM_WINDOWS" /D"HZ_DEBUG"
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) /MTd /Z7
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) /MTd /Z7 /std:c++latest /EHsc
LIBS += ../../bin/Debug-windows-x86_64/Hollows_Engine/Hollows_Engine.lib
LDDEPS += ../../bin/Debug-windows-x86_64/Hollows_Engine/Hollows_Engine.lib
ALL_LDFLAGS += $(LDFLAGS) /NOLOGO /DEBUG

else ifeq ($(config),release)
TARGETDIR = ../../bin/release-windows-x86_64/Assets
TARGET = $(TARGETDIR)/Assets.exe
OBJDIR = ../../bin-int/release-windows-x86_64/Assets
DEFINES += /D"_UNICODE" /D"UNICODE" /D"HZ_PLATFORM_WINDOWS" /D"HZ_RELEASE"
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) /Ot /MT
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) /Ot /MT /std:c++latest /EHsc
LIBS += ../../bin/release-windows-x86_64/Hollows_Engine/Hollows_Engine.lib
LDDEPS += ../../bin/release-windows-x86_64/Hollows_Engine/Hollows_Engine.lib
ALL_LDFLAGS += $(LDFLAGS) /NOLOGO

else ifeq ($(config),dist)
TARGETDIR = ../../bin/Dist-windows-x86_64/Assets
TARGET = $(TARGETDIR)/Assets.exe
OBJDIR = ../../bin-int/Dist-windows-x86_64/Assets
DEFINES += /D"_UNICODE" /D"UNICODE" /D"HZ_PLATFORM_WINDOWS" /D"HZ_DIST"
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) /Ot /MT
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) /Ot /MT /std:c++latest /EHsc
LIBS += ../../bin/Dist-windows-x86_64/Hollows_Engine/Hollows_Engine.lib
LDDEPS += ../../bin/Dist-windows-x86_64/Hollows_Engine/Hollows_Engine.lib
ALL_LDFLAGS += $(LDFLAGS) /NOLOGO

endif

# Per File Configurations
# #############################################


# File sets
# #############################################


# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Assets
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Assets
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif